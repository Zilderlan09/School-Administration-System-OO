from system import Escola

def menu_aluno(escola, user_id):
    aluno = next((a for a in escola.alunos if a.id == user_id), None)
    if not aluno:
        print("‚ùå Aluno n√£o encontrado.")
        return
    print(f"\nüéì Bem-vindo(a), {aluno.nome}!")
    while True:
        print("\n--- Menu do Aluno ---")
        print("1. Ver materiais")
        print("2. Ver notas")
        print("3. Ver provas agendadas")
        print("4. Ver presen√ßas")
        print("5. Ver atividades extracurriculares")
        print("0. Sair")
        opcao = input("Escolha uma op√ß√£o: ")
        if opcao == "1":
            if aluno.materiais:
                print(f"üìö Materiais: {aluno.materiais}")
            else:
                print("üì≠ Nenhum material dispon√≠vel no momento.")
        elif opcao == "2":
            if aluno.notas:
                print(f"üìä Notas: {aluno.notas}")
            else:
                print("üìâ Nenhuma nota registrada ainda.")
        elif opcao == "3":
            if aluno.provas:
                print(f"üìù Provas agendadas: {aluno.provas}")
            else:
                print("üì≠ Nenhuma prova agendada no momento.")
        elif opcao == "4":
            if aluno.presencas:
                print(f"‚úÖ Presen√ßas registradas: {len(aluno.presencas)} dia(s)")
            else:
                print("‚ùå Nenhuma presen√ßa registrada ainda.")
        elif opcao == "5":
            if aluno.atividades:
                print(f"üéØ Atividades: {aluno.atividades}")
            else:
                print("üì≠ Nenhuma atividade registrada.")
        elif opcao == "0":
            break
        else:
            print("Op√ß√£o inv√°lida.")

def menu_funcionario(escola, user_id):
    funcionario = next((f for f in escola.funcionarios if f.id == user_id), None)
    if not funcionario:
        print("‚ùå Funcion√°rio n√£o encontrado.")
        return
    print(f"\nüë®‚Äçüè´ Bem-vindo(a), {funcionario.nome}!")
    while True:
        print("\n--- Menu do Funcion√°rio ---")
        print("1. Registrar presen√ßa do aluno")
        print("2. Lan√ßar nota do aluno")
        print("3. Distribuir material")
        print("4. Gerenciar turmas")
        print("5. Agendar prova")
        print("6. Registrar atividade extracurricular")
        print("7. Remover aluno")
        print("8. Consultar alunos matriculados")
        print("0. Sair")
        opcao = input("Escolha uma op√ß√£o: ")
        if opcao == "1":
            try:
                id_aluno = int(input("ID do aluno para registrar presen√ßa: "))
                escola.registrar_presenca(id_aluno)
            except ValueError:
                print("ID inv√°lido.")
        elif opcao == "2":
            try:
                id_aluno = int(input("ID do aluno: "))
                nota = float(input("Nota a lan√ßar: "))
                escola.lancar_nota(id_aluno, nota)
            except ValueError:
                print("Valor inv√°lido.")
        elif opcao == "3":
            try:
                id_aluno = int(input("ID do aluno: "))
                material = input("Material a distribuir: ")
                escola.distribuir_material(id_aluno, material)
            except ValueError:
                print("ID inv√°lido.")
        elif opcao == "4":
            turma = input("Nome da turma: ")
            horario = input("Hor√°rio da turma: ")
            escola.gerenciar_turmas(turma, horario)
        elif opcao == "5":
            try:
                id_aluno = int(input("ID do aluno: "))
                nome_prova = input("Nome da prova: ")
                data_prova = input("Data da prova (DD/MM/AAAA): ")
                escola.agendar_prova(id_aluno, nome_prova, data_prova)
            except ValueError:
                print("Valor inv√°lido.")
        elif opcao == "6":
            try:
                id_aluno = int(input("ID do aluno: "))
                atividade = input("Atividade extracurricular: ")
                escola.registrar_atividade(id_aluno, atividade)
            except ValueError:
                print("ID inv√°lido.")
        elif opcao == "7":
            try:
                id_aluno = int(input("ID do aluno para remo√ß√£o: "))
                escola.remover_aluno(id_aluno)
            except ValueError:
                print("ID inv√°lido.")
        elif opcao == "8":
            alunos = escola.consultar_alunos_matriculados()
            if isinstance(alunos, str):
                print(alunos)
            else:
                print("Alunos matriculados:")
                for id_aluno, nome in alunos:
                    print(f"ID: {id_aluno} | Nome: {nome}")
        elif opcao == "0":
            break
        else:
            print("Op√ß√£o inv√°lida.")

def menu_responsavel(escola, user_id):
    responsavel = next((r for r in escola.responsaveis if r.id == user_id), None)
    if not responsavel:
        print("‚ùå Respons√°vel n√£o encontrado.")
        return
    print(f"\nüë™ Bem-vindo, {responsavel.nome}!")
    while True:
        print("\n--- Menu do Respons√°vel ---")
        print("1. Consultar dados do aluno")
        print("0. Sair")
        opcao = input("Escolha uma op√ß√£o: ")
        if opcao == "1":
            escola.consultar_dados_aluno(responsavel.id_aluno)
        elif opcao == "0":
            break
        else:
            print("Op√ß√£o inv√°lida.")

def main():
    escola = Escola()
    print("=== Sistema de Administra√ß√£o Escolar ===")
    while True:
        print("\n1 - Login")
        print("2 - Cadastrar usu√°rio")
        print("3 - Sair")
        opcao = input("Escolha uma op√ß√£o: ")
        if opcao == "1":
            tipo = input("Tipo de usu√°rio (aluno/funcionario/responsavel): ").strip().lower()
            nome = input("Nome: ")
            senha = input("Senha: ")
            login_result = escola.login(nome, senha, tipo)
            if login_result is None:
                print("Falha no login. Tente novamente ou cadastre-se.")
                continue
            tipo_logado, user_id = login_result
            if tipo_logado == "aluno":
                menu_aluno(escola, user_id)
            elif tipo_logado == "funcionario":
                menu_funcionario(escola, user_id)
            elif tipo_logado == "responsavel":
                menu_responsavel(escola, user_id)
        elif opcao == "2":
            tipo = input("Tipo de usu√°rio para cadastro (aluno/funcionario/responsavel): ").strip().lower()
            nome = input("Nome: ")
            senha = input("Senha: ")
            if tipo == "responsavel":
                try:
                    id_aluno = int(input("ID do aluno que o respons√°vel ir√° acompanhar: "))
                except ValueError:
                    print("ID inv√°lido.")
                    continue
                escola.cadastrar_usuario(tipo, nome, senha, id_aluno)
            else:
                escola.cadastrar_usuario(tipo, nome, senha)
        elif opcao == "3":
            print("Saindo do sistema...")
            break
        else:
            print("Op√ß√£o inv√°lida. Tente novamente.")

if __name__ == "__main__":
    main()
