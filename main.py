from system import Escola, Aluno, Funcionario, Responsavel

# ========================
# Menus
# ========================
def menu_aluno(escola, aluno):
    print(f"\nüéì Bem-vindo(a), {aluno.nome}!")
    while True:
        print("\n--- Menu do Aluno ---")
        print("1. Ver materiais")
        print("2. Ver notas")
        print("3. Ver provas agendadas")
        print("4. Ver presen√ßas")
        print("5. Ver atividades extracurriculares")
        print("0. Sair")
        opcao = input("Escolha uma op√ß√£o: ")

        match opcao:
            case "1":
                print("üìö Materiais:", aluno.materiais if aluno.materiais else "üì≠ Nenhum material dispon√≠vel.")
            case "2":
                print("üìä Notas:", aluno.notas if aluno.notas else "üìâ Nenhuma nota registrada.")
            case "3":
                print("üìù Provas:", aluno.provas if aluno.provas else "üì≠ Nenhuma prova agendada.")
            case "4":
                print(f"‚úÖ Presen√ßas: {len(aluno.presencas)} dia(s)" if aluno.presencas else "‚ùå Nenhuma presen√ßa registrada.")
            case "5":
                print("üéØ Atividades:", aluno.atividades if aluno.atividades else "üì≠ Nenhuma atividade registrada.")
            case "0":
                break
            case _:
                print("Op√ß√£o inv√°lida.")

def menu_funcionario(escola, funcionario):
    print(f"\nüë®‚Äçüè´ Bem-vindo(a), {funcionario.nome} ({funcionario.cargo})!")
    while True:
        print("\n--- Menu do Funcion√°rio ---")
        print("1. Registrar presen√ßa do aluno")
        print("2. Lan√ßar nota do aluno")
        print("3. Distribuir material")
        print("4. Gerenciar turmas")
        print("5. Agendar prova")
        print("6. Registrar atividade extracurricular")
        print("7. Remover aluno")
        print("8. Consultar alunos matriculados")
        print("9. Rastrear transporte escolar")
        print("0. Sair")
        opcao = input("Escolha uma op√ß√£o: ")

        match opcao:
            case "1":
                try:
                    id_aluno = int(input("ID do aluno para registrar presen√ßa: "))
                    escola.registrar_presenca(id_aluno)
                except ValueError:
                    print("ID inv√°lido.")
            case "2":
                try:
                    id_aluno = int(input("ID do aluno: "))
                    nota = float(input("Nota a lan√ßar: "))
                    disciplina = funcionario.disciplina if funcionario.cargo == "professor" else input("Disciplina: ")
                    escola.lancar_nota(id_aluno, nota, disciplina)
                except ValueError:
                    print("Valor inv√°lido.")
            case "3":
                try:
                    id_aluno = int(input("ID do aluno: "))
                    material = input("Material a distribuir: ")
                    disciplina = funcionario.disciplina if funcionario.cargo == "professor" else input("Disciplina: ")
                    escola.distribuir_material(id_aluno, material, disciplina)
                except ValueError:
                    print("ID inv√°lido.")
            case "4":
                turma = input("Nome da turma: ")
                horario = input("Hor√°rio da turma: ")
                escola.gerenciar_turmas(turma, horario)
            case "5":
                try:
                    id_aluno = int(input("ID do aluno: "))
                    nome_prova = input("Nome da prova: ")
                    data_prova = input("Data da prova (DD/MM/AAAA): ")
                    disciplina = funcionario.disciplina if funcionario.cargo == "professor" else input("Disciplina: ")
                    escola.agendar_prova(id_aluno, nome_prova, data_prova, disciplina)
                except ValueError:
                    print("Valor inv√°lido.")
            case "6":
                try:
                    id_aluno = int(input("ID do aluno: "))
                    atividade = input("Atividade extracurricular: ")
                    disciplina = funcionario.disciplina if funcionario.cargo == "professor" else input("Disciplina: ")
                    escola.registrar_atividade(id_aluno, atividade, disciplina)
                except ValueError:
                    print("ID inv√°lido.")
            case "7":
                try:
                    id_aluno = int(input("ID do aluno para remo√ß√£o: "))
                    escola.remover_aluno(id_aluno)
                except ValueError:
                    print("ID inv√°lido.")
            case "8":
                alunos = escola.consultar_alunos_matriculados()
                if isinstance(alunos, str):
                    print(alunos)
                else:
                    print("Alunos matriculados:")
                    for id_aluno, nome in alunos:
                        print(f"ID: {id_aluno} | Nome: {nome}")
            case "9":
                try:
                    id_aluno = int(input("ID do aluno para rastrear transporte: "))
                    escola.rastrear_transporte(id_aluno)
                except ValueError:
                    print("ID inv√°lido.")
            case "0":
                break
            case _:
                print("Op√ß√£o inv√°lida.")

def menu_responsavel(escola, responsavel):
    print(f"\nüë™ Bem-vindo, {responsavel.nome}!")
    while True:
        print("\n--- Menu do Respons√°vel ---")
        print("1. Consultar dados do aluno")
        print("2. Pagar mensalidade")
        print("3. Rastrear transporte escolar")
        print("0. Sair")
        opcao = input("Escolha uma op√ß√£o: ")

        match opcao:
            case "1":
                escola.consultar_dados_aluno(responsavel.id_aluno)
            case "2":
                print("üí≥ Formas de pagamento: PIX | Cart√£o | Boleto")
                forma_pagamento = input("Digite a forma de pagamento: ")
                escola.processar_pagamento(responsavel.id_aluno, forma_pagamento)
            case "3":
                escola.rastrear_transporte(responsavel.id_aluno)
            case "0":
                break
            case _:
                print("Op√ß√£o inv√°lida.")

# ========================
# Main
# ========================
def main():
    escola = Escola()
    print("=== üéì EduGestor - Sistema de Gest√£o Escolar ===")
    while True:
        print("\n1 - Login")
        print("2 - Cadastrar usu√°rio")
        print("3 - Sair")
        opcao = input("Escolha uma op√ß√£o: ")

        # ---------------- LOGIN ----------------
        if opcao == "1":
            print("\nSelecione o tipo de usu√°rio:")
            print("1 - Aluno")
            print("2 - Funcion√°rio")
            print("3 - Respons√°vel")
            tipo_opcao = input("Escolha uma op√ß√£o: ")

            match tipo_opcao:
                case "1": tipo = "aluno"
                case "2": tipo = "funcionario"
                case "3": tipo = "responsavel"
                case _: 
                    print("‚ùå Op√ß√£o inv√°lida.")
                    continue

            nome = input("Nome: ")
            senha = input("Senha: ")
            usuario = escola.login(nome, senha, tipo)
            if usuario is None:
                continue
            print(f"\n‚úÖ Login realizado como {usuario.exibir_tipo()}.")

            if isinstance(usuario, Aluno):
                menu_aluno(escola, usuario)
            elif isinstance(usuario, Funcionario):
                menu_funcionario(escola, usuario)
            elif isinstance(usuario, Responsavel):
                menu_responsavel(escola, usuario)

        # ---------------- CADASTRO ----------------
        elif opcao == "2":
            print("\nSelecione o tipo de usu√°rio para cadastro:")
            print("1 - Aluno")
            print("2 - Funcion√°rio")
            print("3 - Respons√°vel")
            tipo_opcao = input("Escolha uma op√ß√£o: ")

            match tipo_opcao:
                case "1": tipo = "aluno"
                case "2": tipo = "funcionario"
                case "3": tipo = "responsavel"
                case _: 
                    print("‚ùå Op√ß√£o inv√°lida.")
                    continue

            nome = input("Nome: ")
            senha = input("Senha: ")

            if tipo == "funcionario":
                print("\nSelecione o cargo:")
                print("1 - Diretor")
                print("2 - Professor")
                print("3 - Motorista")
                print("4 - Outro")
                cargo_opcao = input("Escolha uma op√ß√£o: ")

                match cargo_opcao:
                    case "1":
                        cargo = "diretor"
                        disciplina = None
                    case "2":
                        cargo = "professor"
                        disciplina = input("Digite a disciplina que o professor ir√° lecionar: ")
                    case "3":
                        cargo = "motorista"
                        disciplina = None
                    case "4":
                        cargo = input("Digite o nome do cargo: ")
                        disciplina = None
                    case _:
                        print("‚ùå Op√ß√£o inv√°lida.")
                        continue

                escola.cadastrar_usuario(tipo, nome, senha, cargo=cargo, disciplina=disciplina)

            elif tipo == "responsavel":
                try:
                    id_aluno = int(input("ID do aluno que o respons√°vel ir√° acompanhar: "))
                except ValueError:
                    print("ID inv√°lido.")
                    continue
                escola.cadastrar_usuario(tipo, nome, senha, id_aluno=id_aluno)

            else:
                escola.cadastrar_usuario(tipo, nome, senha)

        elif opcao == "3":
            print("Saindo do sistema...")
            break
        else:
            print("Op√ß√£o inv√°lida. Tente novamente.")

if __name__ == "__main__":
    main()
